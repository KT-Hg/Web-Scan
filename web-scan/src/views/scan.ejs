<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <!-- Latest compiled and minified CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.1/css/all.min.css"
    integrity="sha512-5Hs3dF2AEPkpNAR7UiOHba+lRSJNeM2ECkwxUIxC1Q/FLycGTbNapWXB4tP889k5T5Ju8fs4b1P5z/iB4nMfSQ=="
    crossorigin="anonymous" referrerpolicy="no-referrer" />
  <style>
    body {
      background-color: #e9ecef;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .scan-form-card {
      border: none;
      border-radius: 12px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
    }

    .form-title {
      font-size: 1.3rem;
      font-weight: 600;
      color: #343a40;
      margin-bottom: 1rem;
    }

    .section-divider {
      border-top: 1px solid #dee2e6;
      margin: 1.5rem 0;
    }

    .btn-primary {
      width: 100%;
    }

    .form-check-label {
      cursor: pointer;
    }

    .form-check {
      margin-bottom: 0.5rem;
    }
  </style>
  <title>Web Scan</title>
</head>

<body>
  <div class="container py-5">
    <div class="row justify-content-center">
      <div class="col-xl-10 col-lg-11">
        <div class="card scan-form-card p-5 bg-white mx-auto" style="max-width: 1100px;">
          <h4 class="form-title text-center mb-4">
            <i class="fas fa-search me-2"></i>Web Security Scan
          </h4>

          <form id="scanForm">
            <!-- Scan Type -->
            <div class="mb-3">
              <label class="form-label">1. Choose scan type:</label>
              <div class="form-check">
                <input class="form-check-input" type="radio" name="scanType" id="DAST" value="DAST">
                <label class="form-check-label" for="DAST">DAST - Dynamic Application Security Testing</label>
              </div>
              <div class="form-check">
                <input class="form-check-input" type="radio" name="scanType" id="SAST" value="SAST">
                <label class="form-check-label" for="SAST">SAST - Static Application Security Testing</label>
              </div>
            </div>

            <!-- Tool Options for DAST -->
            <div id="tools1" class="mb-3 d-none">
              <label class="form-label">2. Choose DAST tool:</label>
              <div class="form-check">
                <input class="form-check-input" type="radio" name="tool" id="ZAP" value="ZAP">
                <label class="form-check-label" for="ZAP">ZAP</label>
              </div>
              <div class="form-check">
                <input class="form-check-input" type="radio" name="tool" id="Wapiti" value="Wapiti">
                <label class="form-check-label" for="Wapiti">Wapiti</label>
              </div>
              <div class="form-check">
                <input class="form-check-input" type="radio" name="tool" id="bothDAST" value="bothDAST">
                <label class="form-check-label" for="bothDAST">Both</label>
              </div>
            </div>

            <!-- Tool Options for SAST -->
            <div id="tools2" class="mb-3 d-none">
              <label class="form-label">2. Choose SAST tool:</label>
              <div class="form-check">
                <input class="form-check-input" type="radio" name="tool" id="SonarQube" value="SonarQube">
                <label class="form-check-label" for="SonarQube">SonarQube</label>
              </div>
              <div class="form-check">
                <input class="form-check-input" type="radio" name="tool" id="Trivy" value="Trivy">
                <label class="form-check-label" for="Trivy">Trivy</label>
              </div>
              <div class="form-check">
                <input class="form-check-input" type="radio" name="tool" id="bothSAST" value="bothSAST">
                <label class="form-check-label" for="bothSAST">Both</label>
              </div>
            </div>

            <!-- Access Level -->
            <div id="accessLevelContainer" class="mb-3 d-none">
              <label class="form-label">3. Access level:</label>
              <div class="form-check">
                <input class="form-check-input" type="radio" name="accessLevel" id="public" value="public">
                <label class="form-check-label" for="public">Public</label>
              </div>
              <div class="form-check">
                <input class="form-check-input" type="radio" name="accessLevel" id="private" value="private">
                <label class="form-check-label" for="private">Private</label>
              </div>
            </div>

            <!-- Token -->
            <div id="tokenInputContainer" class="mb-3 d-none">
              <input type="text" class="form-control" id="accessToken" name="token"
                placeholder="Enter authentication token">
            </div>

            <!-- URL -->
            <div id="urlInputContainer" class="mb-3 d-none">
              <input type="text" class="form-control" id="inputUrl" name="url" placeholder="Enter URL to scan">
            </div>

            <!-- Submit & Back -->
            <div class="d-grid gap-2 mt-4">
              <button type="submit" class="btn btn-primary" id="submitBtn" disabled>
                <i class="fas fa-play me-2"></i>Start Scan
              </button>
              <a href="/" class="text-center text-muted text-decoration-none">
                <i class="fas fa-arrow-left me-1"></i>Back to previous page
              </a>
            </div>

          </form>
        </div>
      </div>
    </div>
  </div>

  <script>
    function validateForm() {
      const scanType = document.querySelector('input[name="scanType"]:checked');
      const tool = document.querySelector('input[name="tool"]:checked');
      const url = document.getElementById("inputUrl").value.trim();
      const accessLevelInput = document.querySelector('input[name="accessLevel"]:checked');
      const accessLevel = accessLevelInput ? accessLevelInput.value : null;
      const accessToken = document.getElementById("accessToken").value.trim();

      if (!scanType || !tool || url === "") return false;
      if (scanType.value === "SAST" && !accessLevel) return false;
      if (accessLevel === "private" && accessToken === "") return false;

      return true;
    }

    function updateSubmitButton() {
      const submitBtn = document.getElementById("submitBtn");
      submitBtn.disabled = !validateForm();
    }

    // Gọi khi input thay đổi
    const inputsToWatch = [
      'input[name="scanType"]',
      'input[name="tool"]',
      '#inputUrl',
      'input[name="accessLevel"]',
      '#accessToken'
    ];

    inputsToWatch.forEach((selector) => {
      document.querySelectorAll(selector).forEach((el) => {
        el.addEventListener("input", updateSubmitButton);
        el.addEventListener("change", updateSubmitButton);
      });
    });

    // Cập nhật lần đầu
    updateSubmitButton();

    function checkAccessLevelVisibility() {
      const scanTypeSelected = document.querySelector('input[name="scanType"]:checked');
      const accessContainer = document.getElementById("accessLevelContainer");

      if (scanTypeSelected && scanTypeSelected.value === "SAST") {
        accessContainer.classList.remove("d-none");
      } else {
        accessContainer.classList.add("d-none");
        document.getElementById("tokenInputContainer").classList.add("d-none");
      }
    }

    function checkPrivateTokenVisibility() {
      const privateRadio = document.getElementById("private");
      const tokenInput = document.getElementById("tokenInputContainer");
      if (privateRadio.checked) {
        tokenInput.classList.remove("d-none");
      } else {
        tokenInput.classList.add("d-none");
      }
    }

    function checkSelections() {
      const scanTypeSelected = document.querySelector('input[name="scanType"]:checked');
      const toolSelected = document.querySelector('input[name="tool"]:checked');
      const urlContainer = document.getElementById("urlInputContainer");
      const accessLevelContainer = document.getElementById("accessLevelContainer");

      if (scanTypeSelected && toolSelected) {
        urlContainer.classList.remove("d-none");

        // Nếu là SAST => hiện thêm public/private
        if (scanTypeSelected.value === "SAST") {
          accessLevelContainer.classList.remove("d-none");
        } else {
          accessLevelContainer.classList.add("d-none");
        }
      } else {
        urlContainer.classList.add("d-none");
        accessLevelContainer.classList.add("d-none");
      }
    }


    document.querySelector('input[id="DAST"]').addEventListener("change", function () {
      if (this.checked) {
        document.getElementById("tools1").classList.remove("d-none");
        document.getElementById("tools2").classList.add("d-none");
        checkSelections();
      }
    });
    document.querySelector('input[id="SAST"]').addEventListener("change", function () {
      if (this.checked) {
        document.getElementById("tools2").classList.remove("d-none");
        document.getElementById("tools1").classList.add("d-none");
        checkSelections();
      }
    });

    document.querySelectorAll('input[name="scanType"]').forEach((el) => {
      el.addEventListener("change", () => {
        checkSelections();
        checkAccessLevelVisibility();
      });
    });

    document.querySelectorAll('input[name="tool"]').forEach((el) => {
      el.addEventListener("change", checkSelections);
    });

    document.querySelectorAll('input[name="accessLevel"]').forEach((el) => {
      el.addEventListener("change", checkPrivateTokenVisibility);
    });

    document.querySelector("form").addEventListener("submit", function (event) {
      event.preventDefault(); // Ngăn chặn hành động mặc định của form

      const scanType = document.querySelector('input[name="scanType"]:checked');
      const tool = document.querySelector('input[name="tool"]:checked');
      const accessLevelInput = document.querySelector('input[name="accessLevel"]:checked');
      const accessLevel = accessLevelInput ? accessLevelInput.value : null;
      const accessToken = document.getElementById("accessToken").value;
      const url = document.getElementById("inputUrl").value;


      if (!scanType || !tool || !url) {
        alert("Vui lòng chọn loại scan, tool và nhập URL!");
        return;
      }

      if (scanType.value === "SAST" && !accessLevel) {
        alert("Vui lòng chọn quyền truy cập public hoặc private!");
        return;
      }

      if (accessLevel === "private" && accessToken.trim() === "") {
        alert("Vui lòng nhập token cho chế độ Private!");
        return;
      }

      const requestOptions = {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          scanType: scanType.value,
          tool: tool.value,
          url: url,
          ...(accessLevel && { accessLevel: accessLevel }),
          ...(accessLevel === "private" && { token: accessToken })
        }),
      };

      let endpoints = [];

      switch (tool.value) {
        case "ZAP":
          endpoints.push("/scanZAP");
          break;
        case "Wapiti":
          endpoints.push("/scanWapiti");
          break;
        case "bothDAST":
          endpoints.push("/scanDAST");
          break;
        case "SonarQube":
          endpoints.push("/scanSonarQube");
          break;
        case "Trivy":
          endpoints.push("/scanTrivy");
          break;
        case "bothSAST":
          endpoints.push("/scanSAST");
          break;
      }

      endpoints.forEach((endpoint) => fetch(endpoint, requestOptions));
      window.location.href = "/userHomepage";
    });
  </script>
  <!-- Latest compiled JavaScript -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>