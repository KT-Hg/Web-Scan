<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <title>SAST Vulnerability Report</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #f5f7fa;
      font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
    }

    h1 {
      font-size: 2rem;
      font-weight: 600;
      color: #0d6efd;
    }

    h2 {
      font-size: 1.3rem;
      font-weight: 500;
      color: #333;
    }

    .card {
      border-radius: 12px;
      border: none;
    }

    .alert-high {
      border-left: 6px solid #dc3545;
      background-color: #f8d7da;
    }

    .alert-medium {
      border-left: 6px solid #fd7e14;
      background-color: #fff3cd;
    }

    .alert-low {
      border-left: 6px solid #ffc107;
      background-color: #fff8e1;
    }

    .alert-info {
      border-left: 6px solid #0dcaf0;
      background-color: #cff4fc;
    }

    .alert-title {
      font-weight: 600;
      font-size: 1.1rem;
    }

    pre {
      white-space: pre-wrap;
      word-break: break-word;
      background-color: #f1f1f1;
      padding: 0.5rem;
      border-radius: 5px;
    }

    .btn {
      min-width: 90px;
    }
  </style>

</head>

<body>
  <div class="container my-4">
    <h1 class="mb-3">SAST Vulnerability Report</h1>

    <!-- Filter -->
    <div class="card p-3 mb-4 shadow">
      <form id="filterForm" class="row g-3">
        <div class="col-md-3">
          <label class="form-label">Filter by Severity</label>
          <select class="form-select" id="severityFilter">
            <option value="">All</option>
            <option value="critical">Critical</option>
            <option value="high">High</option>
            <option value="medium">Medium</option>
            <option value="low">Low</option>
            <option value="info">Info</option>
            <option value="blocker">Blocker</option>
            <option value="major">Major</option>
            <option value="minor">Minor</option>
          </select>
        </div>
        <div class="col-md-3">
          <label for="sortSelect" class="form-label">Sort By</label>
          <select class="form-select" id="sortSelect">
            <option value="">Default</option>
            <option value="name-asc">Name ↑</option>
            <option value="name-desc">Name ↓</option>
            <option value="severity-asc">Severity ↑</option>
            <option value="severity-desc">Severity ↓</option>
          </select>
        </div>
        <div class="col-md-3">
          <label class="form-label">Search by Name</label>
          <input type="text" class="form-control" id="searchName" placeholder="e.g. SQL Injection">
        </div>
        <div class="col-md-3 align-self-end d-flex gap-2">
          <button type="button" class="btn btn-primary" onclick="applyFilter()">Apply</button>
          <button type="button" class="btn btn-secondary" onclick="resetFilter()">Reset</button>
        </div>
      </form>
    </div>

    <!-- TRIVY Section -->
    <h2 class="h5 mt-5 mb-3">Trivy Vulnerabilities</h2>
    <div id="trivyAlerts">
      <% trivyErrors.forEach(function(error, idx) { let severity=error.Severity.toLowerCase(); let
        cssClass=severity==='critical' ? 'alert-high' : severity==='high' ? 'alert-high' : severity==='medium'
        ? 'alert-medium' : severity==='low' ? 'alert-low' : 'alert-info' ; let risk=severity.includes('critical') ||
        severity.includes('high') ? 'high' : severity.includes('medium') ? 'medium' : severity.includes('low') ? 'low'
        : 'info' ; %>
        <div class="mb-3 p-3 bg-white shadow rounded <%= cssClass %> alert-item" data-risk="<%= severity %>"
          data-alert-name="<%= error.Title.toLowerCase() %>">
          <div class="alert-title mb-1">
            <% let icon=severity==='critical' || severity==='high' ? '🔴' : severity==='medium' ? '🟠' :
              severity==='low' ? '🟡' : 'ℹ️' ; %>
              <%= icon %>
                <%= error.Title %> (<span class="text-danger">
                    <%= error.Severity %>
                  </span>)
          </div>
          <div class="small text-muted mb-2">
            Package: <%= error.PkgName %> | Vulnerability ID: <%= error.VulnerabilityID %> | Status: <%= error.Status %>
                  |
                  Published: <%= new Date(error.PublishedDate).toLocaleDateString() %>
          </div>
          <div><strong>Description:</strong> <span>
              <%= error.Description %>
            </span></div>
        </div>
        <% }); %>
    </div>

    <!-- SONARQUBE Section -->
    <h2 class="h5 mt-5 mb-3">SonarQube Issues</h2>
    <div id="sonarqubeAlerts">
      <% sonarQubeErrors.forEach(function(error, idx) { let severity=error.severity.toLowerCase(); let
        cssClass=severity==='blocker' ? 'alert-high' : severity==='critical' ? 'alert-high' : severity==='major'
        ? 'alert-medium' : severity==='minor' ? 'alert-low' : 'alert-info' ; let risk=severity==='blocker' ||
        severity==='critical' ? 'high' : severity==='major' ? 'medium' : severity==='minor' ? 'low' : 'info' ; %>
        <div class="mb-3 p-3 bg-white shadow rounded <%= cssClass %> alert-item" data-risk="<%= severity %>"
          data-alert-name="<%= error.rule.toLowerCase() %>">
          <div class="alert-title mb-1">
            <% let icon=severity==='blocker' || severity==='critical' ? '🔴' : severity==='major' ? '🟠' :
              severity==='minor' ? '🟡' : 'ℹ️' ; %>
              <%= icon %>
                <%= error.rule %> (<span class="text-danger">
                    <%= error.severity %>
                  </span>)
          </div>
          <div class="small text-muted mb-2">
            Component: <%= error.component %> | Line: <%= error.line %> | Status: <%= error.status %> | Created: <%= new
                    Date(error.creationDate).toLocaleDateString() %>
          </div>
          <div><strong>Message:</strong> <span>
              <%= error.message %>
            </span></div>
        </div>
        <% }); %>
    </div>
  </div>

  <script>
    function sortAlerts() {
      const sortValue = document.getElementById("sortSelect").value;
      const riskRank = {
        blocker: 4,
        critical: 3,
        high: 3,
        major: 2,
        medium: 2,
        minor: 1,
        low: 1,
        info: 0
      };

      function getCompareFn(value) {
        if (value === "name-asc") return (a, b) => a.dataset.alertName.localeCompare(b.dataset.alertName);
        if (value === "name-desc") return (a, b) => b.dataset.alertName.localeCompare(a.dataset.alertName);
        if (value === "severity-asc") return (a, b) => riskRank[a.dataset.risk] - riskRank[b.dataset.risk];
        if (value === "severity-desc") return (a, b) => riskRank[b.dataset.risk] - riskRank[a.dataset.risk];
        return null;
      }

      const compareFn = getCompareFn(sortValue);
      if (!compareFn) return;

      const trivyContainer = document.getElementById("trivyAlerts");
      const sonarContainer = document.getElementById("sonarqubeAlerts");

      if (trivyContainer) {
        const trivyAlerts = Array.from(trivyContainer.querySelectorAll(".alert-item"));
        trivyAlerts.sort(compareFn).forEach(el => trivyContainer.appendChild(el));
      }

      if (sonarContainer) {
        const sonarAlerts = Array.from(sonarContainer.querySelectorAll(".alert-item"));
        sonarAlerts.sort(compareFn).forEach(el => sonarContainer.appendChild(el));
      }
    }

    function applyFilter() {
      const severity = document.getElementById('severityFilter').value.toLowerCase();
      const name = document.getElementById('searchName').value.trim().toLowerCase();
      const alerts = document.querySelectorAll('.alert-item');

      alerts.forEach(alert => {
        const risk = alert.dataset.risk;
        const alertName = alert.dataset.alertName;
        let visible = true;

        if (severity && risk !== severity) visible = false;
        if (name && !alertName.includes(name)) visible = false;

        alert.style.display = visible ? '' : 'none';
      });

      sortAlerts(); // <== Gọi ở đây là đủ
    }

    function resetFilter() {
      document.getElementById('riskFilter').value = '';
      document.getElementById('searchName').value = '';
      applyFilter();
    }

  </script>
</body>

</html>