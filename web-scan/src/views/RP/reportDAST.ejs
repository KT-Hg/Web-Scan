<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>DAST Report</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #f5f7fa;
      font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
    }

    h1 {
      font-size: 2rem;
      font-weight: 600;
      color: #0d6efd;
    }

    h2 {
      font-size: 1.3rem;
      font-weight: 500;
      color: #333;
    }

    .card {
      border-radius: 12px;
      border: none;
    }

    .alert-high {
      border-left: 6px solid #dc3545;
      background-color: #f8d7da;
    }

    .alert-medium {
      border-left: 6px solid #fd7e14;
      background-color: #fff3cd;
    }

    .alert-low {
      border-left: 6px solid #ffc107;
      background-color: #fff8e1;
    }

    .alert-info {
      border-left: 6px solid #0dcaf0;
      background-color: #cff4fc;
    }

    .alert-title {
      font-weight: 600;
      font-size: 1.1rem;
    }

    pre {
      white-space: pre-wrap;
      word-break: break-word;
      background-color: #f1f1f1;
      padding: 0.5rem;
      border-radius: 5px;
    }

    .btn {
      min-width: 90px;
    }
  </style>
</head>

<body>
  <div class="container my-4">
    <h1 class="mb-3">DAST Consolidated Report</h1>
    <div class="mb-4 text-muted">
      <div>Total ZAP Alerts: <%= zapErrors.length %>
      </div>
      <div>Total Wapiti Alerts: <%= wapitiErrors.length %>
      </div>
    </div>
  </div>

  <!-- Filter Section -->
  <div class="container my-4">
    <div class="card p-3 shadow mb-4">
      <form id="filterForm" class="row g-3">
        <div class="col-md-3">
          <label for="riskFilter" class="form-label">Filter by Risk</label>
          <select class="form-select" id="riskFilter" name="risk">
            <option value="">All</option>
            <option value="high">High</option>
            <option value="medium">Medium</option>
            <option value="low">Low</option>
            <option value="info">Informational</option>
          </select>
        </div>
        <div class="col-md-3">
          <label for="sortSelect" class="form-label">Sort By</label>
          <select class="form-select" id="sortSelect">
            <option value="">Default</option>
            <option value="name-asc">Alert Name ↑</option>
            <option value="name-desc">Alert Name ↓</option>
            <option value="risk-asc">Risk ↑</option>
            <option value="risk-desc">Risk ↓</option>
          </select>
        </div>
        <div class="col-md-3">
          <label for="searchName" class="form-label">Alert Name Contains</label>
          <input type="text" class="form-control" id="searchName" name="name" placeholder="e.g. SQLi, XSS">
        </div>
        <div class="col-md-3 align-self-end d-flex gap-2">
          <button type="button" class="btn btn-primary" onclick="applyFilter()">Apply</button>
          <button type="button" class="btn btn-secondary" onclick="resetFilter()">Clear</button>
        </div>
      </form>
    </div>

    <h2 class="mb-3">ZAP Alerts</h2>
    <div id="zapAlerts">
      <% zapErrors.forEach(function(alert, idx) { let risk=alert.riskdesc.toLowerCase(); let
        riskClass=risk.includes('high') ? 'alert-high' : risk.includes('medium') ? 'alert-medium' : risk.includes('low')
        ? 'alert-low' : 'alert-info' ; let riskShort=risk.includes('high') ? 'high' : risk.includes('medium') ? 'medium'
        : risk.includes('low') ? 'low' : 'info' ; let alertHtmlId=`zap-alert-${idx}`; %>
        <div class="mb-4 p-3 bg-white shadow rounded <%= riskClass %> alert-item" data-risk="<%= riskShort %>"
          data-alert-name="<%= alert.alert.toLowerCase() %>" id="<%= alertHtmlId %>">
          <div class="alert-title mb-1">
            <% let icon=riskShort==='high' ? '🔴' : riskShort==='medium' ? '🟠' : riskShort==='low' ? '🟡' : 'ℹ️' ; %>
              <%= icon %>
                <%= alert.alert %> (<span class="text-danger">
                    <%= alert.riskdesc %>
                  </span>)
          </div>
          <div class="small text-muted mb-2">
            Confidence: <%= alert.confidence %> | Risk Code: <%= alert.riskcode %> | CWE: <%= alert.cweid %> | Source
                  ID:
                  <%= alert.sourceid %>
          </div>
          <div class="mb-2"><strong>Description:</strong> <span><%- alert.description %></span></div>
          <div class="mb-2"><strong>Solution:</strong> <span><%- alert.solution %></span></div>
          <% if (alert.references) { %>
            <div><strong>References:</strong> <span><%- alert.references %></span></div>
            <% } %>
        </div>
        <% }); %>
    </div>
    <h2 class="mt-5 mb-3">Wapiti Alerts</h2>
    <div id="wapitiAlerts">
      <% wapitiErrors.forEach(function(alert, idx) { let risk=parseInt(alert.Level); let riskClass=risk>= 5 ?
        'alert-high' :
        risk >= 3 ? 'alert-medium' :
        risk >= 2 ? 'alert-low' : 'alert-info';
        let riskShort = risk >= 5 ? 'high' :
        risk >= 3 ? 'medium' :
        risk >= 2 ? 'low' : 'info';
        let alertHtmlId = `wapiti-alert-${idx}`;
        %>
        <div class="mb-4 p-3 bg-white shadow rounded <%= riskClass %> alert-item" data-risk="<%= riskShort %>"
          data-alert-name="<%= alert.VulnerabilityID.toLowerCase() %>" id="<%= alertHtmlId %>">
          <div class="alert-title mb-1">
            <% let icon=riskShort==='high' ? '🔴' : riskShort==='medium' ? '🟠' : riskShort==='low' ? '🟡' : 'ℹ️' ; %>
              <%= icon %>
                <%= alert.VulnerabilityID %> (<span class="text-danger">Severity: <%= alert.Level %></span>)
          </div>
          <div class="small text-muted mb-2">
            Category: <%= alert.Classification %> | Method: <%= alert.Method %>
          </div>
          <div class="mb-2"><strong>Path:</strong> <code><%= alert.Path %></code></div>
          <div><strong>cURL:</strong> <code><%= alert.CurlCommand %></code></div>
        </div>
        <% }); %>
    </div>
  </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    function applyFilter() {
      var risk = document.getElementById('riskFilter').value;
      var name = document.getElementById('searchName').value.trim().toLowerCase();
      var alerts = document.querySelectorAll('.alert-item');
      alerts.forEach(function (alert) {
        var show = true;
        if (risk && alert.dataset.risk !== risk) show = false;
        if (name && !alert.dataset.alertName.includes(name)) show = false;
        alert.style.display = show ? '' : 'none';
      });
    }

    function resetFilter() {
      document.getElementById('riskFilter').value = '';
      document.getElementById('searchName').value = '';
      applyFilter();
    }

    function sortAlerts() {
      const sortValue = document.getElementById("sortSelect").value;

      const riskRank = { info: 0, low: 1, medium: 2, high: 3 };

      function getCompareFn(value) {
        if (value === "name-asc")
          return (a, b) => a.dataset.alertName.localeCompare(b.dataset.alertName);
        if (value === "name-desc")
          return (a, b) => b.dataset.alertName.localeCompare(a.dataset.alertName);
        if (value === "risk-asc")
          return (a, b) => riskRank[a.dataset.risk] - riskRank[b.dataset.risk];
        if (value === "risk-desc")
          return (a, b) => riskRank[b.dataset.risk] - riskRank[a.dataset.risk];
        return null;
      }

      const compareFn = getCompareFn(sortValue);
      if (!compareFn) return;

      const zapContainer = document.getElementById("zapAlerts");
      const zapAlerts = Array.from(zapContainer.querySelectorAll(".alert-item"));
      const sortedZap = zapAlerts.sort(compareFn);
      sortedZap.forEach(el => zapContainer.appendChild(el));

      const wapitiContainer = document.getElementById("wapitiAlerts");
      const wapitiAlerts = Array.from(wapitiContainer.querySelectorAll(".alert-item"));
      const sortedWapiti = wapitiAlerts.sort(compareFn);
      sortedWapiti.forEach(el => wapitiContainer.appendChild(el));
    }

    const originalApplyFilter = applyFilter;
    applyFilter = function () {
      originalApplyFilter();
      sortAlerts();
    };
  </script>
</body>

</html>