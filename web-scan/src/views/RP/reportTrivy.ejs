<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>Trivy SAST Report - <%= data.CreatedAt %>
  </title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #f5f7fa;
      font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
    }

    h1 {
      font-size: 2rem;
      font-weight: 600;
      color: #0d6efd;
    }

    .card {
      border-radius: 12px;
      border: none;
    }

    .alert-high {
      border-left: 6px solid #dc3545;
      background-color: #f8d7da;
    }

    .alert-medium {
      border-left: 6px solid #fd7e14;
      background-color: #fff3cd;
    }

    .alert-low {
      border-left: 6px solid #ffc107;
      background-color: #fff8e1;
    }

    .alert-info {
      border-left: 6px solid #0dcaf0;
      background-color: #cff4fc;
    }

    .alert-title {
      font-weight: 600;
      font-size: 1.1rem;
    }

    pre {
      white-space: pre-wrap;
      word-break: break-word;
      background-color: #f1f1f1;
      padding: 0.5rem;
      border-radius: 5px;
    }

    .btn {
      min-width: 90px;
    }
  </style>
</head>

<body>
  <div class="container my-4">
    <h1 class="mb-3">Trivy SAST Report</h1>
    <div class="mb-4 text-muted">
      <div>Artifact: <%= data.ArtifactName %> (<%= data.ArtifactType %>)</div>
      <div>Created: <%= data.CreatedAt %>
      </div>
    </div>

    <!-- Filter Section -->
    <div class="card p-3 mb-4 shadow">
      <form id="filterForm" class="row g-3">
        <div class="col-md-3">
          <label for="severityFilter" class="form-label">Filter by Severity</label>
          <select class="form-select" id="severityFilter" name="severity">
            <option value="">All</option>
            <option value="CRITICAL">Critical</option>
            <option value="HIGH">High</option>
            <option value="MEDIUM">Medium</option>
            <option value="LOW">Low</option>
          </select>
        </div>
        <div class="col-md-3">
          <label for="sortSelect" class="form-label">Sort By</label>
          <select class="form-select" id="sortSelect">
            <option value="">Default</option>
            <option value="name-asc">Package Name ‚Üë</option>
            <option value="name-desc">Package Name ‚Üì</option>
            <option value="severity-asc">Severity ‚Üë</option>
            <option value="severity-desc">Severity ‚Üì</option>
          </select>
        </div>
        <div class="col-md-3">
          <label for="searchName" class="form-label">Package Name Contains</label>
          <input type="text" class="form-control" id="searchName" name="name" placeholder="e.g. mysql2">
        </div>
        <div class="col-md-3 align-self-end d-flex gap-2">
          <button type="button" class="btn btn-primary" onclick="applyFilter()">Apply</button>
          <button type="button" class="btn btn-secondary" onclick="resetFilter()">Clear</button>
        </div>
      </form>
    </div>

    <% data.Results && data.Results.forEach(function(result) { if(!result.Vulnerabilities) return;
      result.Vulnerabilities.forEach(function(vul, idx) { var sev=(vul.Severity || 'info' ).toLowerCase(); var
      sevClass=sev==='critical' ? 'alert-high' : sev==='high' ? 'alert-high' : sev==='medium' ? 'alert-medium' :
      sev==='low' ? 'alert-low' : 'alert-info' ; %>
      <div class="mb-4 p-3 bg-white shadow rounded <%= sevClass %> alert-item" data-severity="<%= sev %>"
        data-alert-name="<%= vul.PkgName.toLowerCase() %> <%= vul.VulnerabilityID.toLowerCase() %> <%= vul.Title? vul.Title.toLowerCase() : '' %>">
        <div class="alert-title mb-1">
          <% let icon=sev==='critical' ? 'üî¥' : sev==='high' ? 'üî¥' : sev==='medium' ? 'üü†' : sev==='low' ? 'üü°' : '‚ÑπÔ∏è'
            ; %>
            <%= icon %>
              <%= vul.Title || vul.VulnerabilityID %>
                (<span class="text-danger">
                  <%= vul.Severity %>
                </span>)
        </div>

        <div class="mb-1"><span class="fw-semibold">Package:</span>
          <%= vul.PkgName %> (<%= vul.InstalledVersion %>)
        </div>
        <div class="mb-1"><span class="fw-semibold">Vulnerability ID:</span>
          <%= vul.VulnerabilityID %>
        </div>
        <% if(vul.FixedVersion) { %>
          <div class="mb-1"><span class="fw-semibold">Fixed Version:</span>
            <%= vul.FixedVersion %>
          </div>
          <% } %>
            <div class="mb-2"><span class="fw-semibold">Description:</span>
              <%= vul.Description %>
            </div>
            <% if(vul.References && vul.References.length) { %>
              <div class="mb-2"><span class="fw-semibold">References:</span>
                <ul>
                  <% vul.References.forEach(function(ref) { %>
                    <li><a href="<%= ref %>" target="_blank">
                        <%= ref %>
                      </a></li>
                    <% }); %>
                </ul>
              </div>
              <% } %>
      </div>
      <% }); }); %>
        <% if (!data.Results || !data.Results.some(r=> r.Vulnerabilities && r.Vulnerabilities.length)) { %>
          <div class="alert alert-success">No vulnerabilities found.</div>
          <% } %>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    function sortAlerts() {
      const sortValue = document.getElementById("sortSelect").value;
      const riskRank = {
        critical: 4,
        high: 3,
        medium: 2,
        low: 1,
        info: 0
      };

      function getCompareFn(value) {
        if (value === "name-asc")
          return (a, b) => a.dataset.alertName.localeCompare(b.dataset.alertName);
        if (value === "name-desc")
          return (a, b) => b.dataset.alertName.localeCompare(a.dataset.alertName);
        if (value === "severity-asc")
          return (a, b) => riskRank[a.dataset.severity] - riskRank[b.dataset.severity];
        if (value === "severity-desc")
          return (a, b) => riskRank[b.dataset.severity] - riskRank[a.dataset.severity];
        return null;
      }

      const compareFn = getCompareFn(sortValue);
      if (!compareFn) return;

      const alertContainer = document.querySelector(".container");
      const alerts = Array.from(document.querySelectorAll(".alert-item"))
        .filter(el => el.style.display !== "none");

      if (alerts.length) {
        const parent = alerts[0].parentElement;
        const sorted = alerts.sort(compareFn);
        sorted.forEach(el => parent.appendChild(el));
      }
    }

    function applyFilter() {
      var sev = document.getElementById('severityFilter').value.toLowerCase();
      var name = document.getElementById('searchName').value.trim().toLowerCase();
      var alerts = document.querySelectorAll('.alert-item');

      alerts.forEach(function (alert) {
        var show = true;
        if (sev && alert.dataset.severity !== sev) show = false;
        if (name && !alert.dataset.alertName.includes(name)) show = false;
        alert.style.display = show ? '' : 'none';
      });

      sortAlerts(); // g·ªçi sau khi l·ªçc
    }

    function resetFilter() {
      document.getElementById('severityFilter').value = '';
      document.getElementById('searchName').value = '';
      applyFilter();
    }
  </script>
</body>

</html>