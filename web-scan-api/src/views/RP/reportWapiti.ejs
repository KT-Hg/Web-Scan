<%/* reportWapiti.ejs */%>

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Wapiti Security Report</title>
    <link rel="stylesheet" href="styles.css" />
  </head>
  <body>
    <header>
      <h1>Wapiti Security Report</h1>
      <p>Target: <%= data.infos.target %></p>
      <p>Date: <%= data.infos.date %></p>
      <p>Version: <%= data.infos.version %></p>
      <p>Scope: <%= data.infos.scope %></p>
    </header>

    <main>
      <section>
        <h2>Classifications</h2>
        <% for (const [key, value] of Object.entries(data.classifications)) { %>
        <div class="classification">
          <h3><%= key %></h3>
          <p><strong>Description:</strong> <%= value.desc %></p>
          <p><strong>Solution:</strong> <%= value.sol %></p>
          <p><strong>References:</strong></p>
          <ul>
            <% for (const [refKey, refValue] of Object.entries(value.ref)) { %>
            <li><a href="<%= refValue %>"><%= refKey %></a></li>
            <% } %>
          </ul>
        </div>
        <% } %>
      </section>

      <section>
        <h2>Vulnerabilities Found</h2>
        <% for (const [key, vulnerabilities] of Object.entries(data.vulnerabilities)) { %>
        <div class="vulnerability">
          <h3><%= key %></h3>
          <% if (vulnerabilities.length === 0) { %>
          <p>No vulnerabilities found.</p>
          <% } else { %>
          <ul>
            <% vulnerabilities.forEach(vuln => { %>
            <li>
              <strong>Method:</strong> <%= vuln.method %><br />
              <strong>Path:</strong> <%= vuln.path %><br />
              <strong>Info:</strong> <%= vuln.info %><br />
              <strong>Level:</strong> <%= vuln.level %><br />
              <strong>Parameter:</strong> <%= vuln.parameter %><br />
              <strong>HTTP Request:</strong>
              <pre><%= vuln.http_request %></pre>
              <strong>CURL Command:</strong>
              <pre><%= vuln.curl_command %></pre>
            </li>
            <% }); %>
          </ul>
          <% } %>
        </div>
        <% } %>
      </section>

      <section>
        <h2>Anomalies</h2>
        <% for (const [key, anomalies] of Object.entries(data.anomalies)) { %>
        <div class="anomaly">
          <h3><%= key %></h3>
          <ul>
            <% anomalies.forEach(anomaly => { %>
            <li>
              <strong>Method:</strong> <%= anomaly.method %><br />
              <strong>Path:</strong> <%= anomaly.path %><br />
              <strong>Info:</strong> <%= anomaly.info %><br />
              <strong>Level:</strong> <%= anomaly.level %><br />
              <strong>Parameter:</strong> <%= anomaly.parameter %><br />
              <strong>HTTP Request:</strong>
              <pre><%= anomaly.http_request %></pre>
              <strong>CURL Command:</strong>
              <pre><%= anomaly.curl_command %></pre>
            </li>
            <% }); %>
          </ul>
        </div>
        <% } %>
      </section>
    </main>

    <footer>
      <p>Generated by Wapiti</p>
    </footer>
  </body>
</html>
